<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>h2o-broker</artifactId>
	<version>0.6.5</version>

	<parent>
		<groupId>org.trustedanalytics</groupId>
		<artifactId>spring-project-template</artifactId>
		<version>0.5.2</version>
	</parent>

	<properties>
		<brokerVersion>2.6.0</brokerVersion>
		<brokerTestVersion>2.6.0</brokerTestVersion>
		<start-class>org.trustedanalytics.servicebroker.h2o.Application</start-class>
		<jacoco-measurement-instructions>0.800</jacoco-measurement-instructions>
		<jacoco-measurement-branches>0.900</jacoco-measurement-branches>
		<jacoco-measurement-lines>0.850</jacoco-measurement-lines>
		<jacoco-measurement-classes>0.892</jacoco-measurement-classes>
		<docker.imageName>${project.artifactId}</docker.imageName>
	</properties>
	<scm>
		<connection>scm:git:git@h2o-broker:trustedanalytics/h2o-broker.git</connection>
		<tag>HEAD</tag>
	</scm>

	<build>
		<resources>
			<resource>
				<directory>src/cloudfoundry</directory>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
						<phase>package</phase>
					</execution>
				</executions>
				<configuration>
					<executable>cp</executable>
					<arguments>
						<argument>target/classes/manifest.yml</argument>
						<argument>manifest.yml</argument>
					</arguments>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>2.11</version>
				<configuration>
					<includes>
						<include>src/**/*.java</include>
					</includes>
					<mapping>
						<java>JAVADOC_STYLE</java>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<id>check-license</id>
						<phase>initialize</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.12</version>
				<configuration>
					<imageName>${docker.imageName}</imageName>
					<baseImage>tapimages:8080/tap-base-java:java8-jessie</baseImage>
					<cmd>["java", "-jar", "/${project.build.finalName}.jar"]</cmd>
					<useConfigFile>true</useConfigFile>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					<env>
						<PORT>8080</PORT>
						<JAVA_OPTS>-Xmx512m</JAVA_OPTS>
					</env>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- tag::jetty[] -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>
		<!-- end::jetty[] -->

		<dependency>
			<groupId>org.trustedanalytics.servicebroker.repository</groupId>
			<artifactId>zookeeper-broker-store</artifactId>
			<version>0.6.1</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>tomcat</groupId>
					<artifactId>jasper-compiler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>tomcat</groupId>
					<artifactId>jasper-runtime</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>19.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.16.8</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.trustedanalytics</groupId>
			<artifactId>hadoop-utils</artifactId>
			<version>0.4.7</version>
			<exclusions>
				<!--<exclusion> <groupId>org.slf4j</groupId> <artifactId>slf4j-log4j12</artifactId> 
					</exclusion> -->
				<exclusion>
					<groupId>org.apache.curator</groupId>
					<artifactId>curator-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>servlet-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.trustedanalytics</groupId>
			<artifactId>h2o-provisioner</artifactId>
			<version>0.6.1</version>
			<classifier>api</classifier>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.cloudfoundry</groupId>
			<artifactId>spring-boot-cf-service-broker</artifactId>
			<version>${brokerVersion}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.cloudfoundry</groupId>
			<artifactId>spring-boot-cf-service-broker-tests</artifactId>
			<version>${brokerTestVersion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>1.7.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.cloudfoundry-community</groupId>
			<artifactId>nats-client</artifactId>
			<version>0.6.4</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.feign</groupId>
			<artifactId>feign-core</artifactId>
			<version>8.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.feign</groupId>
			<artifactId>feign-jackson</artifactId>
			<version>8.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.feign</groupId>
			<artifactId>feign-slf4j</artifactId>
			<version>8.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.feign</groupId>
			<artifactId>feign-okhttp</artifactId>
			<version>8.18.0</version>
		</dependency>
	</dependencies>
</project>
